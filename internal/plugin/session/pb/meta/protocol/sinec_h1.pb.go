// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.0
// source: meta/protocol/sinec_h1.proto

package push_model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Sinech1Info struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Len           *uint32                `protobuf:"varint,1,opt,name=len" json:"len,omitempty"`             // 	长度指示
	Blocklen      *uint32                `protobuf:"varint,2,opt,name=blocklen" json:"blocklen,omitempty"`   //	数据块长度
	Dwnr          *uint32                `protobuf:"varint,3,opt,name=dwnr" json:"dwnr,omitempty"`           //	内存块内地址
	Resvalue      *uint32                `protobuf:"varint,4,opt,name=resvalue" json:"resvalue,omitempty"`   //	响应值
	Opcode        *uint32                `protobuf:"varint,5,opt,name=opcode" json:"opcode,omitempty"`       //	操作码，指示操作类型
	Blocktype     *uint32                `protobuf:"varint,6,opt,name=blocktype" json:"blocktype,omitempty"` //	h1 块类型
	Org           *uint32                `protobuf:"varint,7,opt,name=org" json:"org,omitempty"`             // 表示存储类型
	Dbnr          *uint32                `protobuf:"varint,8,opt,name=dbnr" json:"dbnr,omitempty"`           //	内存块编号
	Header        *string                `protobuf:"bytes,9,opt,name=header" json:"header,omitempty"`        //	H1 头部
	Dlen          *uint32                `protobuf:"varint,10,opt,name=dlen" json:"dlen,omitempty"`          //以字为单位的长度
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sinech1Info) Reset() {
	*x = Sinech1Info{}
	mi := &file_meta_protocol_sinec_h1_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sinech1Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sinech1Info) ProtoMessage() {}

func (x *Sinech1Info) ProtoReflect() protoreflect.Message {
	mi := &file_meta_protocol_sinec_h1_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sinech1Info.ProtoReflect.Descriptor instead.
func (*Sinech1Info) Descriptor() ([]byte, []int) {
	return file_meta_protocol_sinec_h1_proto_rawDescGZIP(), []int{0}
}

func (x *Sinech1Info) GetLen() uint32 {
	if x != nil && x.Len != nil {
		return *x.Len
	}
	return 0
}

func (x *Sinech1Info) GetBlocklen() uint32 {
	if x != nil && x.Blocklen != nil {
		return *x.Blocklen
	}
	return 0
}

func (x *Sinech1Info) GetDwnr() uint32 {
	if x != nil && x.Dwnr != nil {
		return *x.Dwnr
	}
	return 0
}

func (x *Sinech1Info) GetResvalue() uint32 {
	if x != nil && x.Resvalue != nil {
		return *x.Resvalue
	}
	return 0
}

func (x *Sinech1Info) GetOpcode() uint32 {
	if x != nil && x.Opcode != nil {
		return *x.Opcode
	}
	return 0
}

func (x *Sinech1Info) GetBlocktype() uint32 {
	if x != nil && x.Blocktype != nil {
		return *x.Blocktype
	}
	return 0
}

func (x *Sinech1Info) GetOrg() uint32 {
	if x != nil && x.Org != nil {
		return *x.Org
	}
	return 0
}

func (x *Sinech1Info) GetDbnr() uint32 {
	if x != nil && x.Dbnr != nil {
		return *x.Dbnr
	}
	return 0
}

func (x *Sinech1Info) GetHeader() string {
	if x != nil && x.Header != nil {
		return *x.Header
	}
	return ""
}

func (x *Sinech1Info) GetDlen() uint32 {
	if x != nil && x.Dlen != nil {
		return *x.Dlen
	}
	return 0
}

var File_meta_protocol_sinec_h1_proto protoreflect.FileDescriptor

var file_meta_protocol_sinec_h1_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x73, 0x69, 0x6e, 0x65, 0x63, 0x5f, 0x68, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x22, 0xf3, 0x01, 0x0a, 0x0b, 0x53, 0x69, 0x6e, 0x65, 0x63, 0x68, 0x31,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x6c, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x6c,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x6c,
	0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x77, 0x6e, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x64, 0x77, 0x6e, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x73, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x6f, 0x70, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x62,
	0x6e, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x62, 0x6e, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6c, 0x65, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x6c, 0x65, 0x6e, 0x42, 0x2f, 0x5a, 0x2d, 0x64, 0x69,
	0x73, 0x73, 0x65, 0x63, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x62,
	0x3b, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
}

var (
	file_meta_protocol_sinec_h1_proto_rawDescOnce sync.Once
	file_meta_protocol_sinec_h1_proto_rawDescData = file_meta_protocol_sinec_h1_proto_rawDesc
)

func file_meta_protocol_sinec_h1_proto_rawDescGZIP() []byte {
	file_meta_protocol_sinec_h1_proto_rawDescOnce.Do(func() {
		file_meta_protocol_sinec_h1_proto_rawDescData = protoimpl.X.CompressGZIP(file_meta_protocol_sinec_h1_proto_rawDescData)
	})
	return file_meta_protocol_sinec_h1_proto_rawDescData
}

var file_meta_protocol_sinec_h1_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_meta_protocol_sinec_h1_proto_goTypes = []any{
	(*Sinech1Info)(nil), // 0: meta.Sinech1Info
}
var file_meta_protocol_sinec_h1_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_meta_protocol_sinec_h1_proto_init() }
func file_meta_protocol_sinec_h1_proto_init() {
	if File_meta_protocol_sinec_h1_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meta_protocol_sinec_h1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meta_protocol_sinec_h1_proto_goTypes,
		DependencyIndexes: file_meta_protocol_sinec_h1_proto_depIdxs,
		MessageInfos:      file_meta_protocol_sinec_h1_proto_msgTypes,
	}.Build()
	File_meta_protocol_sinec_h1_proto = out.File
	file_meta_protocol_sinec_h1_proto_rawDesc = nil
	file_meta_protocol_sinec_h1_proto_goTypes = nil
	file_meta_protocol_sinec_h1_proto_depIdxs = nil
}
