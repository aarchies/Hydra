// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.0
// source: meta/protocol/modbus.proto

package push_model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModbusInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RegChgDlt       *string                `protobuf:"bytes,1,opt,name=regChgDlt" json:"regChgDlt,omitempty"`
	RegNewVal       *string                `protobuf:"bytes,2,opt,name=regNewVal" json:"regNewVal,omitempty"`
	RegOldVal       *string                `protobuf:"bytes,3,opt,name=regOldVal" json:"regOldVal,omitempty"`
	ProtoID         *string                `protobuf:"bytes,4,opt,name=protoID" json:"protoID,omitempty"`
	Len             *uint32                `protobuf:"varint,5,opt,name=len" json:"len,omitempty"`
	Func            *uint32                `protobuf:"varint,6,opt,name=func" json:"func,omitempty"`
	Excp            *uint32                `protobuf:"varint,7,opt,name=excp" json:"excp,omitempty"`
	TransID         *uint32                `protobuf:"varint,8,opt,name=transID" json:"transID,omitempty"`
	UnitID          *uint32                `protobuf:"varint,9,opt,name=unitID" json:"unitID,omitempty"`
	Addr            *uint32                `protobuf:"varint,10,opt,name=addr" json:"addr,omitempty"`
	RegisterCount   *uint32                `protobuf:"varint,11,opt,name=registerCount" json:"registerCount,omitempty"`
	Vendor          *string                `protobuf:"bytes,12,opt,name=vendor" json:"vendor,omitempty"`
	Product         *string                `protobuf:"bytes,13,opt,name=product" json:"product,omitempty"`
	FirmwareVersion *string                `protobuf:"bytes,14,opt,name=firmwareVersion" json:"firmwareVersion,omitempty"`
	SoftwareVersion *string                `protobuf:"bytes,15,opt,name=softwareVersion" json:"softwareVersion,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ModbusInfo) Reset() {
	*x = ModbusInfo{}
	mi := &file_meta_protocol_modbus_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModbusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModbusInfo) ProtoMessage() {}

func (x *ModbusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_meta_protocol_modbus_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModbusInfo.ProtoReflect.Descriptor instead.
func (*ModbusInfo) Descriptor() ([]byte, []int) {
	return file_meta_protocol_modbus_proto_rawDescGZIP(), []int{0}
}

func (x *ModbusInfo) GetRegChgDlt() string {
	if x != nil && x.RegChgDlt != nil {
		return *x.RegChgDlt
	}
	return ""
}

func (x *ModbusInfo) GetRegNewVal() string {
	if x != nil && x.RegNewVal != nil {
		return *x.RegNewVal
	}
	return ""
}

func (x *ModbusInfo) GetRegOldVal() string {
	if x != nil && x.RegOldVal != nil {
		return *x.RegOldVal
	}
	return ""
}

func (x *ModbusInfo) GetProtoID() string {
	if x != nil && x.ProtoID != nil {
		return *x.ProtoID
	}
	return ""
}

func (x *ModbusInfo) GetLen() uint32 {
	if x != nil && x.Len != nil {
		return *x.Len
	}
	return 0
}

func (x *ModbusInfo) GetFunc() uint32 {
	if x != nil && x.Func != nil {
		return *x.Func
	}
	return 0
}

func (x *ModbusInfo) GetExcp() uint32 {
	if x != nil && x.Excp != nil {
		return *x.Excp
	}
	return 0
}

func (x *ModbusInfo) GetTransID() uint32 {
	if x != nil && x.TransID != nil {
		return *x.TransID
	}
	return 0
}

func (x *ModbusInfo) GetUnitID() uint32 {
	if x != nil && x.UnitID != nil {
		return *x.UnitID
	}
	return 0
}

func (x *ModbusInfo) GetAddr() uint32 {
	if x != nil && x.Addr != nil {
		return *x.Addr
	}
	return 0
}

func (x *ModbusInfo) GetRegisterCount() uint32 {
	if x != nil && x.RegisterCount != nil {
		return *x.RegisterCount
	}
	return 0
}

func (x *ModbusInfo) GetVendor() string {
	if x != nil && x.Vendor != nil {
		return *x.Vendor
	}
	return ""
}

func (x *ModbusInfo) GetProduct() string {
	if x != nil && x.Product != nil {
		return *x.Product
	}
	return ""
}

func (x *ModbusInfo) GetFirmwareVersion() string {
	if x != nil && x.FirmwareVersion != nil {
		return *x.FirmwareVersion
	}
	return ""
}

func (x *ModbusInfo) GetSoftwareVersion() string {
	if x != nil && x.SoftwareVersion != nil {
		return *x.SoftwareVersion
	}
	return ""
}

var File_meta_protocol_modbus_proto protoreflect.FileDescriptor

var file_meta_protocol_modbus_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x22, 0xac, 0x03, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x43, 0x68, 0x67, 0x44, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x67, 0x43, 0x68, 0x67, 0x44, 0x6c, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x4e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x67, 0x4e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x67, 0x4f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x67, 0x4f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x6c, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x75, 0x6e, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x65,
	0x78, 0x63, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x65, 0x78, 0x63, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69,
	0x74, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6f, 0x66, 0x74, 0x77,
	0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x2f, 0x5a, 0x2d, 0x64, 0x69, 0x73, 0x73, 0x65, 0x63, 0x74, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c,
}

var (
	file_meta_protocol_modbus_proto_rawDescOnce sync.Once
	file_meta_protocol_modbus_proto_rawDescData = file_meta_protocol_modbus_proto_rawDesc
)

func file_meta_protocol_modbus_proto_rawDescGZIP() []byte {
	file_meta_protocol_modbus_proto_rawDescOnce.Do(func() {
		file_meta_protocol_modbus_proto_rawDescData = protoimpl.X.CompressGZIP(file_meta_protocol_modbus_proto_rawDescData)
	})
	return file_meta_protocol_modbus_proto_rawDescData
}

var file_meta_protocol_modbus_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_meta_protocol_modbus_proto_goTypes = []any{
	(*ModbusInfo)(nil), // 0: meta.ModbusInfo
}
var file_meta_protocol_modbus_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_meta_protocol_modbus_proto_init() }
func file_meta_protocol_modbus_proto_init() {
	if File_meta_protocol_modbus_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meta_protocol_modbus_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meta_protocol_modbus_proto_goTypes,
		DependencyIndexes: file_meta_protocol_modbus_proto_depIdxs,
		MessageInfos:      file_meta_protocol_modbus_proto_msgTypes,
	}.Build()
	File_meta_protocol_modbus_proto = out.File
	file_meta_protocol_modbus_proto_rawDesc = nil
	file_meta_protocol_modbus_proto_goTypes = nil
	file_meta_protocol_modbus_proto_depIdxs = nil
}
