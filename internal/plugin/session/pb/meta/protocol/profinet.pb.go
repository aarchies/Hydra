// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.0
// source: meta/protocol/profinet.proto

package push_model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProFiNetInfo struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Status              *bool                  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`                           // 状态
	Opnum               *uint32                `protobuf:"varint,2,opt,name=opnum" json:"opnum,omitempty"`                             // 操作编号
	CmMacAddr           *string                `protobuf:"bytes,3,opt,name=cmMacAddr" json:"cmMacAddr,omitempty"`                      // CM 发起者的 MAC 地址
	CmUdport            *uint32                `protobuf:"varint,4,opt,name=cmUdport" json:"cmUdport,omitempty"`                       // CM 发起方 UDP 端口
	CompanionAR         *uint32                `protobuf:"varint,5,opt,name=companionAR" json:"companionAR,omitempty"`                 // 确认同伴 AR 的标识
	CmStationName       *string                `protobuf:"bytes,6,opt,name=cmStationName" json:"cmStationName,omitempty"`              // CM 发起方站点名称
	Iocrtype            *uint32                `protobuf:"varint,7,opt,name=iocrtype" json:"iocrtype,omitempty"`                       // 输入输出控制记录类型
	SubframeMonitor     *bool                  `protobuf:"varint,8,opt,name=subframeMonitor" json:"subframeMonitor,omitempty"`         // 分布式子帧监控器
	QuicklyMacAddr      *string                `protobuf:"bytes,9,opt,name=quicklyMacAddr" json:"quicklyMacAddr,omitempty"`            // 快速转发 MAC 地址
	Framesendoffset     *uint32                `protobuf:"varint,10,opt,name=framesendoffset" json:"framesendoffset,omitempty"`        // 发送帧的偏移量
	Cmrespondermacadd   *string                `protobuf:"bytes,11,opt,name=cmrespondermacadd" json:"cmrespondermacadd,omitempty"`     // CM 响应者的 MAC 地址
	Numberofiocs        *uint32                `protobuf:"varint,12,opt,name=numberofiocs" json:"numberofiocs,omitempty"`              // 输入/输出控制数量
	MaxAlarmDatalen     *uint32                `protobuf:"varint,13,opt,name=maxAlarmDatalen" json:"maxAlarmDatalen,omitempty"`        // 最大报警数据长度
	Seqnumber           *string                `protobuf:"bytes,14,opt,name=seqnumber" json:"seqnumber,omitempty"`                     // 序列号
	Sessionkey          *string                `protobuf:"bytes,15,opt,name=sessionkey" json:"sessionkey,omitempty"`                   // 会话密钥
	Localalarmref       *uint32                `protobuf:"varint,16,opt,name=localalarmref" json:"localalarmref,omitempty"`            // 本地告警引用
	Slotnr              *uint32                `protobuf:"varint,17,opt,name=slotnr" json:"slotnr,omitempty"`                          // 插槽编号
	Blocklength         *uint32                `protobuf:"varint,18,opt,name=blocklength" json:"blocklength,omitempty"`                // 数据块长度
	Cmresponderudpport  *uint32                `protobuf:"varint,19,opt,name=cmresponderudpport" json:"cmresponderudpport,omitempty"`  // CM 响应方 UDP 端口
	Blockversionhigh    *uint32                `protobuf:"varint,20,opt,name=blockversionhigh" json:"blockversionhigh,omitempty"`      // 数据块版本高字节
	Datadescriptiontree *string                `protobuf:"bytes,21,opt,name=datadescriptiontree" json:"datadescriptiontree,omitempty"` // 数据描述
	Lengthiocs          *uint32                `protobuf:"varint,22,opt,name=lengthiocs" json:"lengthiocs,omitempty"`                  // IOCS 的长度
	DeviceAttributes    *string                `protobuf:"bytes,23,opt,name=deviceAttributes" json:"deviceAttributes,omitempty"`       // 设备访问相关属性
	Ioxs                *bool                  `protobuf:"varint,24,opt,name=ioxs" json:"ioxs,omitempty"`                              // 输入/输出控制状态
	FrameType           *uint32                `protobuf:"varint,25,opt,name=frameType" json:"frameType,omitempty"`                    // 帧类型协议
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ProFiNetInfo) Reset() {
	*x = ProFiNetInfo{}
	mi := &file_meta_protocol_profinet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProFiNetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProFiNetInfo) ProtoMessage() {}

func (x *ProFiNetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_meta_protocol_profinet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProFiNetInfo.ProtoReflect.Descriptor instead.
func (*ProFiNetInfo) Descriptor() ([]byte, []int) {
	return file_meta_protocol_profinet_proto_rawDescGZIP(), []int{0}
}

func (x *ProFiNetInfo) GetStatus() bool {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return false
}

func (x *ProFiNetInfo) GetOpnum() uint32 {
	if x != nil && x.Opnum != nil {
		return *x.Opnum
	}
	return 0
}

func (x *ProFiNetInfo) GetCmMacAddr() string {
	if x != nil && x.CmMacAddr != nil {
		return *x.CmMacAddr
	}
	return ""
}

func (x *ProFiNetInfo) GetCmUdport() uint32 {
	if x != nil && x.CmUdport != nil {
		return *x.CmUdport
	}
	return 0
}

func (x *ProFiNetInfo) GetCompanionAR() uint32 {
	if x != nil && x.CompanionAR != nil {
		return *x.CompanionAR
	}
	return 0
}

func (x *ProFiNetInfo) GetCmStationName() string {
	if x != nil && x.CmStationName != nil {
		return *x.CmStationName
	}
	return ""
}

func (x *ProFiNetInfo) GetIocrtype() uint32 {
	if x != nil && x.Iocrtype != nil {
		return *x.Iocrtype
	}
	return 0
}

func (x *ProFiNetInfo) GetSubframeMonitor() bool {
	if x != nil && x.SubframeMonitor != nil {
		return *x.SubframeMonitor
	}
	return false
}

func (x *ProFiNetInfo) GetQuicklyMacAddr() string {
	if x != nil && x.QuicklyMacAddr != nil {
		return *x.QuicklyMacAddr
	}
	return ""
}

func (x *ProFiNetInfo) GetFramesendoffset() uint32 {
	if x != nil && x.Framesendoffset != nil {
		return *x.Framesendoffset
	}
	return 0
}

func (x *ProFiNetInfo) GetCmrespondermacadd() string {
	if x != nil && x.Cmrespondermacadd != nil {
		return *x.Cmrespondermacadd
	}
	return ""
}

func (x *ProFiNetInfo) GetNumberofiocs() uint32 {
	if x != nil && x.Numberofiocs != nil {
		return *x.Numberofiocs
	}
	return 0
}

func (x *ProFiNetInfo) GetMaxAlarmDatalen() uint32 {
	if x != nil && x.MaxAlarmDatalen != nil {
		return *x.MaxAlarmDatalen
	}
	return 0
}

func (x *ProFiNetInfo) GetSeqnumber() string {
	if x != nil && x.Seqnumber != nil {
		return *x.Seqnumber
	}
	return ""
}

func (x *ProFiNetInfo) GetSessionkey() string {
	if x != nil && x.Sessionkey != nil {
		return *x.Sessionkey
	}
	return ""
}

func (x *ProFiNetInfo) GetLocalalarmref() uint32 {
	if x != nil && x.Localalarmref != nil {
		return *x.Localalarmref
	}
	return 0
}

func (x *ProFiNetInfo) GetSlotnr() uint32 {
	if x != nil && x.Slotnr != nil {
		return *x.Slotnr
	}
	return 0
}

func (x *ProFiNetInfo) GetBlocklength() uint32 {
	if x != nil && x.Blocklength != nil {
		return *x.Blocklength
	}
	return 0
}

func (x *ProFiNetInfo) GetCmresponderudpport() uint32 {
	if x != nil && x.Cmresponderudpport != nil {
		return *x.Cmresponderudpport
	}
	return 0
}

func (x *ProFiNetInfo) GetBlockversionhigh() uint32 {
	if x != nil && x.Blockversionhigh != nil {
		return *x.Blockversionhigh
	}
	return 0
}

func (x *ProFiNetInfo) GetDatadescriptiontree() string {
	if x != nil && x.Datadescriptiontree != nil {
		return *x.Datadescriptiontree
	}
	return ""
}

func (x *ProFiNetInfo) GetLengthiocs() uint32 {
	if x != nil && x.Lengthiocs != nil {
		return *x.Lengthiocs
	}
	return 0
}

func (x *ProFiNetInfo) GetDeviceAttributes() string {
	if x != nil && x.DeviceAttributes != nil {
		return *x.DeviceAttributes
	}
	return ""
}

func (x *ProFiNetInfo) GetIoxs() bool {
	if x != nil && x.Ioxs != nil {
		return *x.Ioxs
	}
	return false
}

func (x *ProFiNetInfo) GetFrameType() uint32 {
	if x != nil && x.FrameType != nil {
		return *x.FrameType
	}
	return 0
}

var File_meta_protocol_profinet_proto protoreflect.FileDescriptor

var file_meta_protocol_profinet_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x22, 0xfc, 0x06, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x46, 0x69, 0x4e, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x70, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x70,
	0x6e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6d, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6d, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6d, 0x55, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6d, 0x55, 0x64, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x41, 0x52, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x41, 0x52, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6f, 0x63, 0x72, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x6f, 0x63, 0x72, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x71,
	0x75, 0x69, 0x63, 0x6b, 0x6c, 0x79, 0x4d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x6c, 0x79, 0x4d, 0x61, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x6e, 0x64,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x63, 0x6d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x61, 0x63, 0x61,
	0x64, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6d, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x61, 0x63, 0x61, 0x64, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x6f, 0x66, 0x69, 0x6f, 0x63, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x6f, 0x66, 0x69, 0x6f, 0x63, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x6c,
	0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x71,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x71, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x6b, 0x65, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x72, 0x65, 0x66, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x72, 0x65, 0x66, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6c, 0x6f, 0x74, 0x6e, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73,
	0x6c, 0x6f, 0x74, 0x6e, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6d, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x64, 0x65, 0x72, 0x75, 0x64, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x12, 0x63, 0x6d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x72,
	0x75, 0x64, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x68, 0x69, 0x67, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x68,
	0x69, 0x67, 0x68, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x61, 0x74, 0x61, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x72, 0x65, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x64, 0x61, 0x74, 0x61, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x74, 0x72, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x69,
	0x6f, 0x63, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x69, 0x6f, 0x63, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6f, 0x78, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x69, 0x6f, 0x78, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x2f, 0x5a, 0x2d, 0x64, 0x69, 0x73, 0x73, 0x65, 0x63, 0x74, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c,
}

var (
	file_meta_protocol_profinet_proto_rawDescOnce sync.Once
	file_meta_protocol_profinet_proto_rawDescData = file_meta_protocol_profinet_proto_rawDesc
)

func file_meta_protocol_profinet_proto_rawDescGZIP() []byte {
	file_meta_protocol_profinet_proto_rawDescOnce.Do(func() {
		file_meta_protocol_profinet_proto_rawDescData = protoimpl.X.CompressGZIP(file_meta_protocol_profinet_proto_rawDescData)
	})
	return file_meta_protocol_profinet_proto_rawDescData
}

var file_meta_protocol_profinet_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_meta_protocol_profinet_proto_goTypes = []any{
	(*ProFiNetInfo)(nil), // 0: meta.ProFiNetInfo
}
var file_meta_protocol_profinet_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_meta_protocol_profinet_proto_init() }
func file_meta_protocol_profinet_proto_init() {
	if File_meta_protocol_profinet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meta_protocol_profinet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meta_protocol_profinet_proto_goTypes,
		DependencyIndexes: file_meta_protocol_profinet_proto_depIdxs,
		MessageInfos:      file_meta_protocol_profinet_proto_msgTypes,
	}.Build()
	File_meta_protocol_profinet_proto = out.File
	file_meta_protocol_profinet_proto_rawDesc = nil
	file_meta_protocol_profinet_proto_goTypes = nil
	file_meta_protocol_profinet_proto_depIdxs = nil
}
