// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.0
// source: message/file_alert_info.proto

package push_model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 文件告警信息
type FILE_ALERT_INFO struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	FileMd5                 *string                `protobuf:"bytes,1,req,name=file_md5,json=fileMd5" json:"file_md5,omitempty"`                                                         //	文件MD5
	FileSha1                *string                `protobuf:"bytes,2,req,name=file_sha1,json=fileSha1" json:"file_sha1,omitempty"`                                                      //	文件SHA1
	FileSha256              *string                `protobuf:"bytes,3,req,name=file_sha256,json=fileSha256" json:"file_sha256,omitempty"`                                                //	文件SHA256
	FileSha512              *string                `protobuf:"bytes,4,req,name=file_sha512,json=fileSha512" json:"file_sha512,omitempty"`                                                //	文件SHA512
	FileCrc32               *string                `protobuf:"bytes,5,req,name=file_crc32,json=fileCrc32" json:"file_crc32,omitempty"`                                                   //	文件CRC32
	FileSsdeep              *string                `protobuf:"bytes,6,req,name=file_ssdeep,json=fileSsdeep" json:"file_ssdeep,omitempty"`                                                //	文件SSDeep
	FileSize                *uint32                `protobuf:"varint,7,req,name=file_size,json=fileSize" json:"file_size,omitempty"`                                                     //	文件大小
	FileType                *string                `protobuf:"bytes,8,req,name=file_type,json=fileType" json:"file_type,omitempty"`                                                      //	文件结构签名
	FileOffsetHashMd5       *string                `protobuf:"bytes,9,req,name=file_offset_hash_md5,json=fileOffsetHashMd5" json:"file_offset_hash_md5,omitempty"`                       //	文件偏移HASH
	FileOffsetHashChunkSize *uint32                `protobuf:"varint,10,req,name=file_offset_hash_chunk_size,json=fileOffsetHashChunkSize" json:"file_offset_hash_chunk_size,omitempty"` //	文件偏移HASH位置
	FileHashResult          *string                `protobuf:"bytes,11,req,name=file_hash_result,json=fileHashResult" json:"file_hash_result,omitempty"`                                 //	HASH检测结果
	FileAvResult            *string                `protobuf:"bytes,12,req,name=file_av_result,json=fileAvResult" json:"file_av_result,omitempty"`                                       //	AV检测结果
	FileExAvName            *string                `protobuf:"bytes,13,req,name=file_ex_av_name,json=fileExAvName" json:"file_ex_av_name,omitempty"`                                     //	外部AV名称
	FileExAvResult          *string                `protobuf:"bytes,14,req,name=file_ex_av_result,json=fileExAvResult" json:"file_ex_av_result,omitempty"`                               //	外部AV检测结果
	FileYaraRuleName        *string                `protobuf:"bytes,15,req,name=file_yara_rule_name,json=fileYaraRuleName" json:"file_yara_rule_name,omitempty"`                         //	yara规则名
	FileYaraThreatLevel     *uint32                `protobuf:"varint,16,req,name=file_yara_threat_level,json=fileYaraThreatLevel" json:"file_yara_threat_level,omitempty"`               //	yara规则威胁等级	1：正常，2：低危，3：中危，4：高危
	FileDde                 *string                `protobuf:"bytes,17,opt,name=file_dde,json=fileDde" json:"file_dde,omitempty"`                                                        //	DDE内容
	FilePlatform            *string                `protobuf:"bytes,18,req,name=file_platform,json=filePlatform" json:"file_platform,omitempty"`                                         //	沙箱系统环境
	FileMlDetectModel       *string                `protobuf:"bytes,19,req,name=file_ml_detect_model,json=fileMlDetectModel" json:"file_ml_detect_model,omitempty"`                      //	威胁检测模型名称
	FileMlPrecision         *string                `protobuf:"bytes,20,req,name=file_ml_precision,json=fileMlPrecision" json:"file_ml_precision,omitempty"`                              //	威胁检测模型置信度	百分数字符串
	FileMlClassModel        *string                `protobuf:"bytes,21,req,name=file_ml_class_model,json=fileMlClassModel" json:"file_ml_class_model,omitempty"`                         //	威胁分类模型名称
	FileMlPrediction        *float64               `protobuf:"fixed64,22,req,name=file_ml_prediction,json=fileMlPrediction" json:"file_ml_prediction,omitempty"`                         //	威胁分类模型置信度	百分数小数
	FileIocIp               *string                `protobuf:"bytes,23,opt,name=file_ioc_ip,json=fileIocIp" json:"file_ioc_ip,omitempty"`                                                //	IP IOC
	FileIocDns              *string                `protobuf:"bytes,24,opt,name=file_ioc_dns,json=fileIocDns" json:"file_ioc_dns,omitempty"`                                             //	DNS IOC
	FileIocUrl              *string                `protobuf:"bytes,25,opt,name=file_ioc_url,json=fileIocUrl" json:"file_ioc_url,omitempty"`                                             //	URL IOC
	FilePath                *string                `protobuf:"bytes,26,req,name=file_path,json=filePath" json:"file_path,omitempty"`                                                     //	文件路径
	SandboxReportUrl        *string                `protobuf:"bytes,27,req,name=sandbox_report_url,json=sandboxReportUrl" json:"sandbox_report_url,omitempty"`                           //	沙箱报告路径
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *FILE_ALERT_INFO) Reset() {
	*x = FILE_ALERT_INFO{}
	mi := &file_message_file_alert_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FILE_ALERT_INFO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FILE_ALERT_INFO) ProtoMessage() {}

func (x *FILE_ALERT_INFO) ProtoReflect() protoreflect.Message {
	mi := &file_message_file_alert_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FILE_ALERT_INFO.ProtoReflect.Descriptor instead.
func (*FILE_ALERT_INFO) Descriptor() ([]byte, []int) {
	return file_message_file_alert_info_proto_rawDescGZIP(), []int{0}
}

func (x *FILE_ALERT_INFO) GetFileMd5() string {
	if x != nil && x.FileMd5 != nil {
		return *x.FileMd5
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileSha1() string {
	if x != nil && x.FileSha1 != nil {
		return *x.FileSha1
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileSha256() string {
	if x != nil && x.FileSha256 != nil {
		return *x.FileSha256
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileSha512() string {
	if x != nil && x.FileSha512 != nil {
		return *x.FileSha512
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileCrc32() string {
	if x != nil && x.FileCrc32 != nil {
		return *x.FileCrc32
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileSsdeep() string {
	if x != nil && x.FileSsdeep != nil {
		return *x.FileSsdeep
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileSize() uint32 {
	if x != nil && x.FileSize != nil {
		return *x.FileSize
	}
	return 0
}

func (x *FILE_ALERT_INFO) GetFileType() string {
	if x != nil && x.FileType != nil {
		return *x.FileType
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileOffsetHashMd5() string {
	if x != nil && x.FileOffsetHashMd5 != nil {
		return *x.FileOffsetHashMd5
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileOffsetHashChunkSize() uint32 {
	if x != nil && x.FileOffsetHashChunkSize != nil {
		return *x.FileOffsetHashChunkSize
	}
	return 0
}

func (x *FILE_ALERT_INFO) GetFileHashResult() string {
	if x != nil && x.FileHashResult != nil {
		return *x.FileHashResult
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileAvResult() string {
	if x != nil && x.FileAvResult != nil {
		return *x.FileAvResult
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileExAvName() string {
	if x != nil && x.FileExAvName != nil {
		return *x.FileExAvName
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileExAvResult() string {
	if x != nil && x.FileExAvResult != nil {
		return *x.FileExAvResult
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileYaraRuleName() string {
	if x != nil && x.FileYaraRuleName != nil {
		return *x.FileYaraRuleName
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileYaraThreatLevel() uint32 {
	if x != nil && x.FileYaraThreatLevel != nil {
		return *x.FileYaraThreatLevel
	}
	return 0
}

func (x *FILE_ALERT_INFO) GetFileDde() string {
	if x != nil && x.FileDde != nil {
		return *x.FileDde
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFilePlatform() string {
	if x != nil && x.FilePlatform != nil {
		return *x.FilePlatform
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileMlDetectModel() string {
	if x != nil && x.FileMlDetectModel != nil {
		return *x.FileMlDetectModel
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileMlPrecision() string {
	if x != nil && x.FileMlPrecision != nil {
		return *x.FileMlPrecision
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileMlClassModel() string {
	if x != nil && x.FileMlClassModel != nil {
		return *x.FileMlClassModel
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileMlPrediction() float64 {
	if x != nil && x.FileMlPrediction != nil {
		return *x.FileMlPrediction
	}
	return 0
}

func (x *FILE_ALERT_INFO) GetFileIocIp() string {
	if x != nil && x.FileIocIp != nil {
		return *x.FileIocIp
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileIocDns() string {
	if x != nil && x.FileIocDns != nil {
		return *x.FileIocDns
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFileIocUrl() string {
	if x != nil && x.FileIocUrl != nil {
		return *x.FileIocUrl
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetFilePath() string {
	if x != nil && x.FilePath != nil {
		return *x.FilePath
	}
	return ""
}

func (x *FILE_ALERT_INFO) GetSandboxReportUrl() string {
	if x != nil && x.SandboxReportUrl != nil {
		return *x.SandboxReportUrl
	}
	return ""
}

var File_message_file_alert_info_proto protoreflect.FileDescriptor

var file_message_file_alert_info_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa3, 0x08, 0x0a, 0x0f, 0x46, 0x49, 0x4c,
	0x45, 0x5f, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x73, 0x68, 0x61, 0x31, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x68, 0x61, 0x31, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x61,
	0x32, 0x35, 0x36, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x68,
	0x61, 0x35, 0x31, 0x32, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x68, 0x61, 0x35, 0x31, 0x32, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63,
	0x72, 0x63, 0x33, 0x32, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x43, 0x72, 0x63, 0x33, 0x32, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x73,
	0x64, 0x65, 0x65, 0x70, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x73, 0x64, 0x65, 0x65, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2f, 0x0a, 0x14, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x09, 0x20, 0x02, 0x28, 0x09, 0x52, 0x11,
	0x66, 0x69, 0x6c, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x64,
	0x35, 0x12, 0x3c, 0x0a, 0x1b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x0a, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x17, 0x66, 0x69, 0x6c, 0x65, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x0b, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x61, 0x76, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0c, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x76, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x25, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x78, 0x5f, 0x61, 0x76, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x78,
	0x41, 0x76, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65,
	0x78, 0x5f, 0x61, 0x76, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0e, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x41, 0x76, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x2d, 0x0a, 0x13, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x79, 0x61, 0x72, 0x61, 0x5f, 0x72,
	0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x02, 0x28, 0x09, 0x52, 0x10,
	0x66, 0x69, 0x6c, 0x65, 0x59, 0x61, 0x72, 0x61, 0x52, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x33, 0x0a, 0x16, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x79, 0x61, 0x72, 0x61, 0x5f, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x10, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x13, 0x66, 0x69, 0x6c, 0x65, 0x59, 0x61, 0x72, 0x61, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x64,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x12, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x2f, 0x0a, 0x14, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x6c,
	0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x13, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x6c, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d,
	0x6c, 0x5f, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x6c, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x13, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x6c, 0x5f, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x15, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x10, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x6c, 0x5f, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x02, 0x28, 0x01, 0x52, 0x10, 0x66,
	0x69, 0x6c, 0x65, 0x4d, 0x6c, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6f, 0x63, 0x5f, 0x69, 0x70, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6f, 0x63, 0x49, 0x70, 0x12,
	0x20, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6f, 0x63, 0x5f, 0x64, 0x6e, 0x73, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6f, 0x63, 0x44, 0x6e,
	0x73, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6f, 0x63, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6f, 0x63,
	0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x1a, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x2c, 0x0a, 0x12, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x1b, 0x20, 0x02, 0x28, 0x09, 0x52, 0x10, 0x73, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x42, 0x69,
	0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x2e, 0x6a, 0x75, 0x64, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x5a, 0x35, 0x64, 0x69, 0x73, 0x73, 0x65, 0x63, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3b, 0x70,
	0x75, 0x73, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
}

var (
	file_message_file_alert_info_proto_rawDescOnce sync.Once
	file_message_file_alert_info_proto_rawDescData = file_message_file_alert_info_proto_rawDesc
)

func file_message_file_alert_info_proto_rawDescGZIP() []byte {
	file_message_file_alert_info_proto_rawDescOnce.Do(func() {
		file_message_file_alert_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_file_alert_info_proto_rawDescData)
	})
	return file_message_file_alert_info_proto_rawDescData
}

var file_message_file_alert_info_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_message_file_alert_info_proto_goTypes = []any{
	(*FILE_ALERT_INFO)(nil), // 0: Message.FILE_ALERT_INFO
}
var file_message_file_alert_info_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_message_file_alert_info_proto_init() }
func file_message_file_alert_info_proto_init() {
	if File_message_file_alert_info_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_file_alert_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_file_alert_info_proto_goTypes,
		DependencyIndexes: file_message_file_alert_info_proto_depIdxs,
		MessageInfos:      file_message_file_alert_info_proto_msgTypes,
	}.Build()
	File_message_file_alert_info_proto = out.File
	file_message_file_alert_info_proto_rawDesc = nil
	file_message_file_alert_info_proto_goTypes = nil
	file_message_file_alert_info_proto_depIdxs = nil
}
